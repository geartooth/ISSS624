
```{r}
pacman::p_load(sf,tmap,spdep,tidyverse, dplyr, mapview, sfdep)
```


```{r}
odbus <- read_csv("data/aspatial/origin_destination_bus_202310.csv")

weekdayAM_6_9 <- odbus %>% 
  filter(DAY_TYPE == "WEEKDAY") %>%
  filter(TIME_PER_HOUR >= 6 & TIME_PER_HOUR <= 9) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise(TRIPS = sum(TOTAL_TRIPS))

busstop <- st_read(dsn = "data/geospatial", layer = "BusStop") %>%
  st_transform(crs = 3414)

colnames(busstop)[colnames(busstop) == "BUS_STOP_N"] <- "ORIGIN_PT_CODE"
```


```{r}

center <- st_centroid(busstop)
```

```{r}
area_honeycomb_grid <- st_make_grid(center, cellsize = c(250 * sqrt(3), 250 * 2), what = "polygons", square = FALSE)
honeycomb_grid_sf <- st_sf(area_honeycomb_grid) %>%
  mutate(grid_id = 1:length(lengths(area_honeycomb_grid)))

```

```{r}
busstop_hex <- st_intersection(busstop, honeycomb_grid_sf) %>%
  
  st_drop_geometry()

```
```{r}

origin_data <- unique(weekdayAM_6_9)
```

```{r}
origin_SZ <- left_join(origin_data , busstop_hex
            ) %>%
  
  group_by(grid_id) %>%
  summarise(TOT_TRIPS = sum(TRIPS))

```

```{r}
origintrip_SZ <- left_join(honeycomb_grid_sf, 
                           origin_SZ)

```

```{r}
#newly added
filter_weekdayAM <- origintrip_SZ %>%
  filter(TOT_TRIPS > 0)
```

```{r}
tm_shape(filter_weekdayAM)+
  tm_fill("TOT_TRIPS", 
          style = "quantile", 
          palette = "Blues",
          title = "Passenger trips") +
  tm_layout(main.title = "Passenger trips generated at planning sub-zone level",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from URA\n and Passenger trips data from LTA", 
             position = c("left", "bottom"))

```









#next chap

```{r}

wm_q <- filter_weekdayAM %>%
  mutate(nb = st_contiguity(area_honeycomb_grid),
         wt = st_weights(nb,
                         style = "W"),
         .before = 1) 
```


```{r}

summary(nb_queen$nb)

```